name: "Asset Management System"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_prepare:
  # Prepare the environment for building and testing the Rails application
    runs-on: ubuntu-latest
    container:
      image: sunci/ruby:3.2.2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache Ruby Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: vendor-${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            vendor-${{ runner.os }}-
      - name: Bundle Install
        run: |
          bundle install --path vendor/bundle
  test_rubocop:
    needs: build_prepare
    runs-on: ubuntu-latest
    container:
      image: sunci/ruby:3.2.2
    steps:
      - uses: actions/checkout@v4
      - name: Cache Ruby Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: vendor-${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            vendor-${{ runner.os }}-
      - name: Rubocop Lint
        run: |
          bundle install --path vendor/bundle
          bundle exec rubocop --require rubocop/formatter/checkstyle_formatter --format RuboCop::Formatter::CheckstyleFormatter --no-color app/ lib/
  test_rspec:
    needs: build_prepare
    runs-on: ubuntu-latest
    container:
      image: sunci/ruby:3.2.2
    services:
      postgresql-test:
        image: postgres:16
        env:
          POSTGRES_USER: user-test
          POSTGRES_PASSWORD: password-test
    steps:
      - uses: actions/checkout@v4
      - name: Cache Ruby Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: vendor-${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            vendor-${{ runner.os }}-
      - name: Run Rspec tests
        run: |
          bundle install --path vendor/bundle
          cp config/database-ci.yml config/database.yml
          RAILS_ENV=test bundle exec rails db:drop db:create db:migrate
          RAILS_ENV=test bin/rails assets:precompile
          bundle exec rspec --format documentation
